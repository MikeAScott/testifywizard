	<cb:define name="localProjectSettings">
		<webURL>$(ccnetWebRoot)/server/local/project/$(projectName).$(buildType)/ViewProjectReport.aspx</webURL>
		<workingDirectory>$(rootBuildDir)\$(projectName)\$(buildType)</workingDirectory>
		<artifactDirectory>$(rootBuildDir)\$(projectName)\Build-Reports\$(buildType)</artifactDirectory>
		<state type="state" directory="$(rootBuildDir)\$(projectName)" />
		<labeller type="defaultlabeller">
			<prefix>$(versionPrefix)</prefix>
		</labeller>
	</cb:define>

	<cb:define name="svnSourceControl">
		<sourcecontrol type="svn">
			<executable>$(svnExecutable)</executable>
			<trunkUrl>$(svnRepository)/$(projectName)/trunk</trunkUrl>
			<workingDirectory>.</workingDirectory>
			<autoGetSource>true</autoGetSource>
			<tagOnSuccess>$(tagOnSuccess)</tagOnSuccess>
			<tagBaseUrl>$(svnRepository)/$(projectName)/tags/$(tagFolder)</tagBaseUrl>
		</sourcecontrol>
	</cb:define>
 	
	<cb:define name="nantBuild" >
		<nant>
			<executable>tools\nant\nant.exe</executable>
			<baseDirectory>$(projectRootDir)</baseDirectory>
			<buildArgs>$(buildArgs)</buildArgs>
			<nologo>false</nologo>
			<buildFile>$(projectName).build</buildFile>
			<targetList>
				<cb:buildTargets />
			</targetList>
			<buildTimeoutSeconds>$(buildTimeout)</buildTimeoutSeconds>		
		</nant>
	</cb:define>


	<cb:define name="reportPublishers">
		<merge>
			<files>
				<file>$(projectRootDir)\build\test-reports\*.xml</file>
			</files>
		</merge>
		<statistics />
		<xmllogger>
			<logDir>results</logDir>
		</xmllogger>
		<modificationHistory />
		<rss/>
		<cb:projectPublishers />
	</cb:define>

   	<cb:define name="svnDevBuild">
		<cb:scope buildType="DevBuild" projectRootDir=".">
			<cb:define name="projectPublishers" >
				<cb:devBuildProjectPublishers />
			</cb:define>
			<project name="$(projectName).$(buildType)" queue="$(projectName)" queuePriority="3">
				<cb:localProjectSettings />
				<triggers />
				<cb:svnSourceControl tagOnSuccess="true" tagFolder="DevBuild"/>
				<tasks>
					<cb:define name="buildTargets" >
						<target>clean</target>
						<target>test</target>
					</cb:define>
					<cb:nantBuild buildArgs="-D:fitnesse.port=$(fitnessePort)"/>
				</tasks>
				<publishers>
					<cb:reportPublishers />
				</publishers> 
			</project>
		</cb:scope>
	</cb:define>
 
	<cb:define name="svnContinuousBuild">
		<cb:scope buildType="Continuous" projectRootDir=".">
			<cb:define name="projectPublishers" >
				<cb:continuousProjectPublishers />
			</cb:define>
			<project name="$(projectName).$(buildType)" queue="$(projectName)" queuePriority="5">
				<cb:localProjectSettings/>
				<modificationDelaySeconds>10</modificationDelaySeconds>
				<triggers>
					<intervalTrigger />
				</triggers>
				<cb:svnSourceControl tagOnSuccess="false" tagFolder="" />
				<tasks>
					<cb:define name="buildTargets" >
						<target>clean</target>
						<target>build</target>
					</cb:define>
					<cb:nantBuild buildArgs="" />
				</tasks>
				<publishers>
					<cb:reportPublishers />
				</publishers> 
			</project>
		</cb:scope>
	</cb:define>

	<cb:define name="svnDefaultBuilds" >
		<cb:define name="continuousProjectPublishers" />
		<cb:define name="devBuildProjectPublishers" />
		<cb:svnContinuousBuild 	versionPrefix="0.0.0." buildTimeout="300"  svnRepository="$(svnDefaultRepository)" />
		<cb:svnDevBuild 		versionPrefix="0.0.1." buildTimeout="1200" svnRepository="$(svnDefaultRepository)" />
	</cb:define>

	<cb:define name="p4SourceControl">
		<sourcecontrol type="p4">
			<view>//$(p4Depot)/$(projectName)/...</view>
			<client>$(projectName)_$(buildType)</client>
			<user>$(p4User)</user>
			<password>$(p4Password)</password>
			<port>$(p4Server)</port>
			<autoGetSource>true</autoGetSource>
			<applyLabel>$(tagOnSuccess)</applyLabel>
		</sourcecontrol>
	</cb:define>

	
	<cb:define name="p4ContinuousBuild">
		<cb:scope buildType="Continuous" projectRootDir="$(p4Depot)\$(projectName)">
			<cb:define name="projectPublishers" >
				<cb:continuousProjectPublishers />
			</cb:define>
			<project name="$(projectName).$(buildType)" queue="$(projectName)" queuePriority="5">
				<cb:localProjectSettings/>
				<modificationDelaySeconds>10</modificationDelaySeconds>
				<triggers>
					<intervalTrigger />
				</triggers>
				<cb:p4SourceControl tagOnSuccess="false" tagFolder="" />
				<tasks>
					<cb:define name="buildTargets" >
						<target>clean</target>
						<target>build</target>
					</cb:define>
					<cb:nantBuild buildArgs=""/>
				</tasks>
				<publishers>
					<cb:reportPublishers />
				</publishers> 
			</project>
		</cb:scope>
	</cb:define>

	<cb:define name="p4DevBuild">
		<cb:scope buildType="DevBuild" projectRootDir="$(p4Depot)\$(projectName)">
			<cb:define name="projectPublishers" >
				<cb:devBuildProjectPublishers />
			</cb:define>
			<project name="$(projectName).$(buildType)" queue="$(projectName)" queuePriority="5">
				<cb:localProjectSettings/>
				<triggers />
				<cb:p4SourceControl tagOnSuccess="true" tagFolder="" />
				<tasks>
					<cb:define name="buildTargets" >
						<target>clean</target>
						<target>test</target>
					</cb:define>
					<cb:nantBuild buildArgs="-D:fitnesse.port=$(fitnessePort)" />
				</tasks>
				<publishers>
					<cb:reportPublishers />
				</publishers> 
			</project>
		</cb:scope>
	</cb:define>

	
	<cb:define name="p4DefaultBuilds" >
		<cb:define name="continuousProjectPublishers" />
		<cb:define name="devBuildProjectPublishers" />
		<cb:p4ContinuousBuild versionPrefix="0.0.0." buildTimeout="300" p4Server="$(p4DefaultServer)"/>
		<cb:p4DevBuild versionPrefix="0.0.1." buildTimeout="300" p4Server="$(p4DefaultServer)"/>
	</cb:define>
